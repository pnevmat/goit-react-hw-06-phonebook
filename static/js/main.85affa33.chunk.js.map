{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","redux/actionTypes.js","redux/actions/didMountStoreUpdate.js","redux/actions/addContact.js","redux/actions/deleteContact.js","redux/reducers/contactsReducer.js","redux/actions/searchContacts.js","redux/reducers/filterReducer.js","redux/store.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","onStoreUpdate","createAction","actionTypes","onAddContact","name","number","payload","id","shortid","generate","onDeleteContact","contactsReducer","createReducer","_","state","filter","contact","onSearchContacts","target","value","toLowerCase","filterReducer","store","configureStore","reducer","contacts","middleware","getDefaultMiddleware","logger","devTools","process","ContactForm","handleChange","e","setState","currentTarget","handleSubmit","onSubmit","props","className","styles","addContact_form","preventDefault","elements","addContact_label","htmlFor","input_text","addContact_input","type","placeholder","onChange","addContact_button","Component","Filter","search_label","search_text","search_input","ContactList","foundContacts","contactList","map","contact_item","contact_item_container","contact_name","contact_button","onClick","defaultProps","avatar","PhoneBook","onStateUpdate","obj","find","alert","contactsFinderHandler","includes","this","localStorageContacts","localStorage","getItem","length","JSON","parse","stringify","setItem","prevProps","prevState","removeItem","connect","dispatch","contactId","event","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.85affa33.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"search_label\":\"Filter_search_label__3Xl4v\",\"search_text\":\"Filter_search_text__2vkvn\",\"search_input\":\"Filter_search_input__2vynL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__Y1cH9\",\"contact_item\":\"ContactList_contact_item__3KPDB\",\"contact_item_container\":\"ContactList_contact_item_container__YzBLZ\",\"contact_name\":\"ContactList_contact_name__1S4-J\",\"contact_button\":\"ContactList_contact_button__1Dt-z\"};","const UPDATE_STORE = 'update/store';\r\nconst ADD_CONTACT = 'add/contact';\r\nconst DELETE_CONTACT = 'delete/contact';\r\nconst SEARCH_CONTACTS = 'search/contacts';\r\n\r\nexport default {UPDATE_STORE, ADD_CONTACT, DELETE_CONTACT, SEARCH_CONTACTS}","import {createAction} from '@reduxjs/toolkit';\r\nimport actionTypes from '../actionTypes';\r\n\r\n// const onStoreUpdate = contacts => ({\r\n//     type: actionTypes.UPDATE_STORE,\r\n//     payload: contacts\r\n// });\r\n\r\nconst onStoreUpdate = createAction(actionTypes.UPDATE_STORE);\r\n\r\nexport default onStoreUpdate;","import {createAction} from '@reduxjs/toolkit';\r\nimport actionTypes from '../actionTypes';\r\nimport shortid from 'shortid';\r\n\r\n// const onAddContact = contact => ({\r\n//     type: actionTypes.ADD_CONTACT,\r\n//     payload: {\r\n//         id: shortid.generate(),\r\n//         name: contact.name,\r\n//         number: contact.number\r\n//     }\r\n// });\r\n\r\nconst onAddContact = createAction(actionTypes.ADD_CONTACT, ({name, number}) => ({\r\n    payload: {\r\n        id: shortid.generate(),\r\n        name: name,\r\n        number: number\r\n    }\r\n}));\r\n\r\nexport default onAddContact;","import {createAction} from '@reduxjs/toolkit';\r\nimport actionTypes from '../actionTypes';\r\n\r\n// const onDeleteContact = contactId => ({\r\n//     type: actionTypes.DELETE_CONTACT,\r\n//     payload: contactId\r\n// });\r\n\r\nconst onDeleteContact = createAction(actionTypes.DELETE_CONTACT);\r\n\r\nexport default onDeleteContact;","import {createReducer} from '@reduxjs/toolkit';\r\n\r\n// import actionTypes from '../actionTypes';\r\nimport onStoreUpdate from '../actions/didMountStoreUpdate';\r\nimport onAddContact from '../actions/addContact';\r\nimport onDeleteContact from '../actions/deleteContact';\r\n\r\n// const contactsReducer = (state = [], {type, payload}) => {\r\n//     switch (type) {\r\n//         case actionTypes.UPDATE_STORE :\r\n//             return [...payload]\r\n\r\n//         case actionTypes.ADD_CONTACT :\r\n//             return [...state, payload]\r\n\r\n//         case actionTypes.DELETE_CONTACT :\r\n//             return state.filter(contact => contact.id !== payload)\r\n        \r\n//         default :\r\n//             return state;\r\n//     }\r\n// }\r\n\r\n// const state = []\r\n\r\nconst contactsReducer = createReducer([], {\r\n    [onStoreUpdate]: (_, {payload}) => [...payload],\r\n    [onAddContact]: (state, {payload}) => [...state, payload],\r\n    [onDeleteContact]: (state, {payload}) => state.filter(contact => contact.id !== payload)\r\n});\r\n\r\nexport default contactsReducer;","import {createAction} from '@reduxjs/toolkit';\r\nimport actionTypes from '../actionTypes';\r\n\r\n// const onSearchContacts = event => ({\r\n//     type: actionTypes.SEARCH_CONTACTS,\r\n//     payload: event.target.value.toLowerCase()\r\n// });\r\n\r\nconst onSearchContacts = createAction(actionTypes.SEARCH_CONTACTS, ({target}) => ({\r\n    payload: target.value.toLowerCase()\r\n}));\r\n\r\nexport default onSearchContacts;","import {createReducer} from '@reduxjs/toolkit';\r\n\r\n// import actionTypes from '../actionTypes';\r\nimport onSearchContacts from '../actions/searchContacts';\r\n\r\n// const filterReducer = (state = '', {type, payload}) => {\r\n//     switch (type) {\r\n//         case actionTypes.SEARCH_CONTACTS :\r\n//             return payload\r\n\r\n//         default :\r\n//             return state;\r\n//     }\r\n// }\r\n\r\nconst filterReducer = createReducer('', {\r\n    [onSearchContacts]: (_, {payload}) => payload\r\n});\r\n\r\nexport default filterReducer;","// import {createStore, combineReducers} from 'redux';\r\n// import {devToolsEnhancer} from 'redux-devtools-extension';\r\nimport {configureStore, combineReducers, getDefaultMiddleware} from '@reduxjs/toolkit';\r\n\r\nimport contactsReducer from './reducers/contactsReducer';\r\nimport filterReducer from './reducers/filterReducer';\r\n\r\nimport logger from 'redux-logger';\r\n\r\n// const rootReducer = combineReducers({\r\n//     contacts: contactsReducer,\r\n//     filter: filterReducer\r\n// });\r\n\r\n// const store = createStore(rootReducer, devToolsEnhancer());\r\n\r\n// const store = configureStore({\r\n//     reducer: rootReducer\r\n// });\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        contacts: contactsReducer,\r\n        filter: filterReducer\r\n    },\r\n    middleware: [\r\n        ...getDefaultMiddleware(),\r\n        logger\r\n    ],\r\n    devTools: process.env.NODE_ENV === 'development'\r\n});\r\n\r\nexport default store;","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n    state = {\r\n        name: '',\r\n        number: ''\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.currentTarget.name]: e.currentTarget.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        const {onSubmit} = this.props;\r\n        onSubmit(this.state);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form className={styles.addContact_form} onSubmit={(e) => {\r\n                e.preventDefault();\r\n                this.handleSubmit();\r\n                e.target.elements.name.value = '';\r\n                e.target.elements.number.value = '';\r\n                }}\r\n            >\r\n                <label className={styles.addContact_label} htmlFor=\"\" name=\"contact\">\r\n                    <span className={styles.input_text}>Enter your name</span>\r\n                    <input className={styles.addContact_input} type=\"text\" placeholder=\"name\" name=\"name\" onChange={e => {\r\n                      this.handleChange(e);\r\n                  }}/>\r\n                </label>\r\n                <label className={styles.addContact_label}>\r\n                    <span className={styles.input_text}>Enter your phone number</span>\r\n                    <input className={styles.addContact_input} type=\"tel\" placeholder=\"phone\" name=\"number\" onChange={e => {\r\n                      this.handleChange(e);\r\n                  }}/>\r\n                </label>\r\n                <button className={styles.addContact_button} type=\"submit\">Add Contact</button>\r\n            </form>\r\n        );\r\n    };\r\n};\r\n\r\nContactForm.propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactForm;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './Filter.module.css';\r\n\r\nconst Filter = ({onChange}) => (\r\n    <label className={styles.search_label}>\r\n        <span className={styles.search_text}>Find contacts by name</span>\r\n        <input className={styles.search_input} type=\"text\" placeholder=\"name\" onChange={(e) => {\r\n            // console.log(\"Filter Event Log\", e);\r\n            e.preventDefault();\r\n            onChange(e);\r\n          }}>\r\n        </input>\r\n    </label>\r\n);\r\n\r\nFilter.propTypes = {\r\n    onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './ContactList.module.css';\r\n\r\nconst ContactList = ({filter, state, foundContacts, onDeleteContact}) => (\r\n  <ul className={styles.contactList}>\r\n    {filter === '' ?\r\n      state.map(contact => (\r\n        <li className={styles.contact_item} key={contact.id}>\r\n          <div className={styles.contact_item_container}>\r\n            <p className={styles.contact_name}>{contact.name}: {contact.number}</p>\r\n            <button className={styles.contact_button} type=\"button\" onClick={() => onDeleteContact(contact.id)}>Delete</button>\r\n          </div>\r\n        </li>\r\n      )) :\r\n      foundContacts.map(contact => (\r\n        <li className={styles.contact_item} key={contact.id}>\r\n          <div className={styles.contact_item_container}>\r\n            <p className={styles.contact_name}>{contact.name}: {contact.number}</p>\r\n            <button className={styles.contact_button} type=\"button\">Delete</button>\r\n          </div>\r\n        </li>\r\n      ))\r\n    }\r\n  </ul>\r\n);\r\n\r\nContactList.defaultProps = {\r\n  avatar: {}\r\n};\r\n\r\nContactList.propTypes = {\r\n  foundContacts: PropTypes.arrayOf(\r\n      PropTypes.object\r\n  ),\r\n  state: PropTypes.arrayOf(\r\n    PropTypes.object.isRequired\r\n  ).isRequired,\r\n  filter: PropTypes.string.isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\n// import actions from './redux/actions';\r\nimport onStoreUpdate from './redux/actions/didMountStoreUpdate';\r\nimport onAddContact from './redux/actions/addContact';\r\nimport onDeleteContact from './redux/actions/deleteContact';\r\nimport onSearchContacts from './redux/actions/searchContacts';\r\n\r\nimport ContactForm from './components/ContactForm/ContactForm';\r\nimport Filter from './components/Filter/Filter';\r\nimport ContactList from './components/ContactList/ContactList';\r\n\r\nimport './App.css';\r\n\r\nclass PhoneBook extends Component {\r\n\r\n  componentDidMount() {\r\n    const {contacts, onStoreUpdate} = this.props;\r\n    // console.log(\"On Mount Component\", this.props.contacts);\r\n    const localStorageContacts = localStorage.getItem('Contacts');\r\n\r\n    if (contacts.length === 0 && localStorageContacts !== null) {\r\n      const contacts = JSON.parse(localStorageContacts);\r\n      onStoreUpdate(contacts);\r\n\r\n    } else if (localStorageContacts === null) {\r\n      const contacts = JSON.stringify(this.props.contacts);\r\n      localStorage.setItem('Contacts', contacts);\r\n    };\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const {contacts} = this.props;\r\n    const localStorageContacts = localStorage.getItem('Contacts');\r\n\r\n    if (contacts !== localStorageContacts) {\r\n      const contacts = JSON.stringify(this.props.contacts);\r\n      localStorage.setItem('Contacts', contacts);\r\n\r\n    } else if (contacts.length === 0) {\r\n      localStorage.removeItem('Contacts');\r\n    };\r\n  };\r\n\r\n  onStateUpdate = (obj) => {\r\n    const {onAddContact} = this.props;\r\n    // console.log(\"Function OnStateUpdate\", obj);\r\n    // console.log(\"OnStateUpdate Props Contacts\", this.props.contacts);\r\n\r\n    if (this.props.contacts.find(contact => contact.name === obj.name)) {\r\n      alert(`${obj.name}is alredy in contacts`);\r\n\r\n    } else {\r\n      onAddContact(obj);\r\n    };\r\n  };\r\n\r\n  contactsFinderHandler = () => {\r\n    const {contacts} = this.props;\r\n\r\n    if (this.props.filter !== '') {\r\n      const foundContacts = contacts.filter(contact => \r\n        contact.name.toLowerCase().includes(this.props.filter));\r\n      return foundContacts\r\n    };\r\n  };\r\n\r\n  render() {\r\n    const {onSearchContacts, contacts, filter, onDeleteContact} = this.props;\r\n    const foundContacts = this.contactsFinderHandler();\r\n    // console.log(this.props);\r\n    return (\r\n      <section className=\"section\">\r\n        <h1>Phone Book</h1>\r\n        <ContactForm onSubmit={this.onStateUpdate}/>\r\n        <h2>Contacts</h2>\r\n        <Filter onChange={onSearchContacts}/>\r\n        {contacts.length !== 0 &&\r\n          <ContactList \r\n          foundContacts={foundContacts}\r\n          state={contacts}\r\n          filter={filter}\r\n          onDeleteContact={onDeleteContact}\r\n        />}\r\n        \r\n      </section>\r\n    )\r\n  }\r\n};\r\n\r\nconst mapStateToProps = ({contacts, filter}) => ({\r\n  contacts,\r\n  filter\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onStoreUpdate: contacts => dispatch(onStoreUpdate(contacts)),\r\n  onAddContact: contact => dispatch(onAddContact(contact)),\r\n  onDeleteContact: contactId => dispatch(onDeleteContact(contactId)),\r\n  onSearchContacts: event => dispatch(onSearchContacts(event))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PhoneBook);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {Provider} from 'react-redux';\r\nimport store from './redux/store';\r\nimport PhoneBook from './App';\r\n\r\nimport 'modern-normalize/modern-normalize.css';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <React.StrictMode>\r\n      <PhoneBook />\r\n    </React.StrictMode>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addContact_form\":\"ContactForm_addContact_form__1x-q-\",\"addContact_label\":\"ContactForm_addContact_label__1nJOj\",\"addContact_input\":\"ContactForm_addContact_input__3TVsN\",\"input_text\":\"ContactForm_input_text__12-Xw\",\"addContact_button\":\"ContactForm_addContact_button__2iY6k\"};"],"sourceRoot":""}